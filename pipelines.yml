resources:
  - name: myrepo
    type: GitRepo
    configuration:
      gitProvider: github
      path: gitta-jfrog/pipelines-example
      branches:
        include: master
        resources:
  - name:       teams
    type:       OutgoingWebhook
    configuration:
      webhookName: teams
      path: /json

pipelines:
  - name: pipeline_hello_world
    configuration:
      environmentVariables:
        readOnly:
          MY_MESSAGE: '"Hello World!"'
    steps:
      - name: my_send_hook_json
        type: Bash
        configuration:
          outputResources:
            - name: teams
        execution:
          onExecute:
            - jsonPayload="{\"runNumber\":\"$run_number\", \"stepName\":\"$step_name\"}"
            - set_payload MyOutgoingJSONResource "$jsonPayload"
          onFailure:
            - export res_MyOutgoingJSONResource_skipWebHook=true
          onSuccess:
            - echo "Payload sent by "$res_MyOutgoingJSONResource_name":"
            - echo $res_My-Outgoing-JSON-Resource_payload
            
      - name: step_1
        type: Bash
        configuration:
          inputResources:
            - name: myrepo
        execution:
          onExecute:
            - echo $MY_MESSAGE
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
            - add_run_variables current_runid=$run_id
            - echo Previous run ID is $prev_runid
            - echo Current run ID is $current_runid
            - echo $res_myAppRepo_resourcePath
            - echo $res_myAppRepo_gitProvider_name
            - echo $res_myAppRepo_commitSha
 
      - name: step_2
        type: Bash
        configuration:
          inputSteps:
            - name: step_1
        execution:
          onExecute:
            - echo $MY_MESSAGE
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
 
      - name: step_3
        type: Bash
        configuration:
          inputSteps:
            - name: step_1
        execution:
          onExecute:
            - echo $MY_MESSAGE
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
 
      - name: step_4
        type: Bash
        configuration:
          inputSteps:
            - name: step_2
            - name: step_3
        execution:
          onExecute:
            - echo $MY_MESSAGE
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
            - add_pipeline_variables prev_runid=$run_id           
            - echo $current_runid Completed
         
